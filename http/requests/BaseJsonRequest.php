<?php
declare(strict_types = 1);

namespace app\http\requests;

use dstotijn\yii2jsv\JsonSchemaValidator;
use yii\base\Model;

abstract class BaseJsonRequest extends Model
{
    /** @var string|array */
    public $data;

    /**
     * @return string
     */
    abstract public function schema(): string;

    /** */
    public function rules()
    {
        return [
            ['data', 'required'],
            [
                'data',
                JsonSchemaValidator::class,
                'schema' => $this->getSchemaPath($this->schema()),
            ],
        ];
    }

    /**
     * @param array $data
     * @param null $formName
     * @return bool
     */
    public function load($data, $formName = null)
    {
        return parent::load(['data' => json_encode($data, JSON_UNESCAPED_UNICODE)], ''); // TODO: Change the autogenerated stub
    }

    /** */
    public function afterValidate()
    {
        $this->data = json_decode($this->data, true);
        parent::afterValidate(); // TODO: Change the autogenerated stub
    }

    /**
     * @param string $path
     * @return string
     */
    protected function getSchemaPath(string $path): string
    {
        return 'file://' . \Yii::getAlias('@app/share/schema/' . trim($path, '/'));
    }
}